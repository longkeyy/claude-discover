#!/bin/bash
# 更新任务索引：记录任务执行时间和统计信息

set -e

PROJECT_ROOT="$(pwd)"
TASK_ID="$1"
PUBLISHED_COUNT="${2:-0}"

INDEX_FILE="$PROJECT_ROOT/config/tasks.index.yaml"

# 如果索引文件不存在，创建初始结构
if [ ! -f "$INDEX_FILE" ]; then
  echo "# Task Execution Index" > "$INDEX_FILE"
  echo "# Auto-generated by /discover" >> "$INDEX_FILE"
  echo "" >> "$INDEX_FILE"
  echo "tasks:" >> "$INDEX_FILE"
fi

# 获取当前时间戳
TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

# 检查任务是否已在索引中
if grep -q "^  $TASK_ID:" "$INDEX_FILE"; then
  # 更新现有任务
  # 注意：这里使用临时文件来避免sed在macOS上的问题
  awk -v task="$TASK_ID" -v time="$TIMESTAMP" -v count="$PUBLISHED_COUNT" '
    BEGIN { in_task = 0; updated = 0 }
    /^  [a-zA-Z]/ { in_task = 0 }
    $0 ~ "^  " task ":" { in_task = 1; print; next }
    in_task && /last_run:/ { print "    last_run: " time; next }
    in_task && /last_published:/ { print "    last_published: " count; next }
    in_task && /total_published:/ {
      # 读取当前总数并加上新发布的数量
      match($0, /total_published: ([0-9]+)/, arr)
      old_total = arr[1]
      new_total = old_total + count
      print "    total_published: " new_total
      next
    }
    { print }
  ' "$INDEX_FILE" > "$INDEX_FILE.tmp" && mv "$INDEX_FILE.tmp" "$INDEX_FILE"
else
  # 添加新任务条目
  echo "  $TASK_ID:" >> "$INDEX_FILE"
  echo "    status: active" >> "$INDEX_FILE"
  echo "    last_run: $TIMESTAMP" >> "$INDEX_FILE"
  echo "    last_published: $PUBLISHED_COUNT" >> "$INDEX_FILE"
  echo "    total_published: $PUBLISHED_COUNT" >> "$INDEX_FILE"
fi

echo "✅ 任务索引已更新: $TASK_ID"
